{
  "compilerOptions": {
    "target": "ES2020",                       /* Specify ECMAScript target version */
    "module": "ESNext",                     /* Specify module code generation */
    "lib": ["dom", "dom.iterable", "esnext"], /* Specify library files to be included in the compilation. */
    "jsx": "react-jsx",                       /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "strict": true,                           /* Enable all strict type-checking options. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
    "moduleResolution": "bundler",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "resolveJsonModule": true,                /* Enables importing files with the '.json' extension. */
    "isolatedModules": true,                  /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    "noEmit": true,                           /* Do not emit outputs. (Useful if another tool like Babel handles transpilation) */
    "allowJs": true,                          /* Allow javascript files to be compiled. */
    "baseUrl": "./src",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {                                /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    //   "*": ["types/*"]
    // },
    // "typeRoots": ["./node_modules/@types", "./src/types"] /* List of folders to include type definitions from. */
  },
  "include": [
    "src/**/*",
    "src/vite-env.d.ts"                                /* Specifies an array of filenames or patterns to include in the program. */
  ],
  "exclude": [
    "node_modules",                           /* Specifies an array of filenames or patterns that should be skipped when resolving include. */
    "**/*.spec.ts",
    "**/*.test.ts"
  ]
}
